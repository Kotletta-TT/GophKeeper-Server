// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.12.4
// source: proto/secretcard.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	SecretCardService_CreateSecretCard_FullMethodName = "/v1.SecretCardService/CreateSecretCard"
	SecretCardService_ReadSecretCard_FullMethodName   = "/v1.SecretCardService/ReadSecretCard"
	SecretCardService_UpdateSecretCard_FullMethodName = "/v1.SecretCardService/UpdateSecretCard"
	SecretCardService_DeleteSecretCard_FullMethodName = "/v1.SecretCardService/DeleteSecretCard"
	SecretCardService_ListSecretCard_FullMethodName   = "/v1.SecretCardService/ListSecretCard"
)

// SecretCardServiceClient is the client API for SecretCardService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type SecretCardServiceClient interface {
	CreateSecretCard(ctx context.Context, in *CreateSecretCardRequest, opts ...grpc.CallOption) (*SecretCard, error)
	ReadSecretCard(ctx context.Context, in *ReadSecretCardRequest, opts ...grpc.CallOption) (*SecretCard, error)
	UpdateSecretCard(ctx context.Context, in *UpdateSecretCardRequest, opts ...grpc.CallOption) (*SecretCard, error)
	DeleteSecretCard(ctx context.Context, in *DeleteSecretCardRequest, opts ...grpc.CallOption) (*Empty, error)
	ListSecretCard(ctx context.Context, in *ListSecretCardRequest, opts ...grpc.CallOption) (*ListSecretCardResponse, error)
}

type secretCardServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSecretCardServiceClient(cc grpc.ClientConnInterface) SecretCardServiceClient {
	return &secretCardServiceClient{cc}
}

func (c *secretCardServiceClient) CreateSecretCard(ctx context.Context, in *CreateSecretCardRequest, opts ...grpc.CallOption) (*SecretCard, error) {
	out := new(SecretCard)
	err := c.cc.Invoke(ctx, SecretCardService_CreateSecretCard_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *secretCardServiceClient) ReadSecretCard(ctx context.Context, in *ReadSecretCardRequest, opts ...grpc.CallOption) (*SecretCard, error) {
	out := new(SecretCard)
	err := c.cc.Invoke(ctx, SecretCardService_ReadSecretCard_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *secretCardServiceClient) UpdateSecretCard(ctx context.Context, in *UpdateSecretCardRequest, opts ...grpc.CallOption) (*SecretCard, error) {
	out := new(SecretCard)
	err := c.cc.Invoke(ctx, SecretCardService_UpdateSecretCard_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *secretCardServiceClient) DeleteSecretCard(ctx context.Context, in *DeleteSecretCardRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, SecretCardService_DeleteSecretCard_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *secretCardServiceClient) ListSecretCard(ctx context.Context, in *ListSecretCardRequest, opts ...grpc.CallOption) (*ListSecretCardResponse, error) {
	out := new(ListSecretCardResponse)
	err := c.cc.Invoke(ctx, SecretCardService_ListSecretCard_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SecretCardServiceServer is the server API for SecretCardService service.
// All implementations must embed UnimplementedSecretCardServiceServer
// for forward compatibility
type SecretCardServiceServer interface {
	CreateSecretCard(context.Context, *CreateSecretCardRequest) (*SecretCard, error)
	ReadSecretCard(context.Context, *ReadSecretCardRequest) (*SecretCard, error)
	UpdateSecretCard(context.Context, *UpdateSecretCardRequest) (*SecretCard, error)
	DeleteSecretCard(context.Context, *DeleteSecretCardRequest) (*Empty, error)
	ListSecretCard(context.Context, *ListSecretCardRequest) (*ListSecretCardResponse, error)
	mustEmbedUnimplementedSecretCardServiceServer()
}

// UnimplementedSecretCardServiceServer must be embedded to have forward compatible implementations.
type UnimplementedSecretCardServiceServer struct {
}

func (UnimplementedSecretCardServiceServer) CreateSecretCard(context.Context, *CreateSecretCardRequest) (*SecretCard, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSecretCard not implemented")
}
func (UnimplementedSecretCardServiceServer) ReadSecretCard(context.Context, *ReadSecretCardRequest) (*SecretCard, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadSecretCard not implemented")
}
func (UnimplementedSecretCardServiceServer) UpdateSecretCard(context.Context, *UpdateSecretCardRequest) (*SecretCard, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSecretCard not implemented")
}
func (UnimplementedSecretCardServiceServer) DeleteSecretCard(context.Context, *DeleteSecretCardRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSecretCard not implemented")
}
func (UnimplementedSecretCardServiceServer) ListSecretCard(context.Context, *ListSecretCardRequest) (*ListSecretCardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListSecretCard not implemented")
}
func (UnimplementedSecretCardServiceServer) mustEmbedUnimplementedSecretCardServiceServer() {}

// UnsafeSecretCardServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SecretCardServiceServer will
// result in compilation errors.
type UnsafeSecretCardServiceServer interface {
	mustEmbedUnimplementedSecretCardServiceServer()
}

func RegisterSecretCardServiceServer(s grpc.ServiceRegistrar, srv SecretCardServiceServer) {
	s.RegisterService(&SecretCardService_ServiceDesc, srv)
}

func _SecretCardService_CreateSecretCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSecretCardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SecretCardServiceServer).CreateSecretCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SecretCardService_CreateSecretCard_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SecretCardServiceServer).CreateSecretCard(ctx, req.(*CreateSecretCardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SecretCardService_ReadSecretCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadSecretCardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SecretCardServiceServer).ReadSecretCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SecretCardService_ReadSecretCard_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SecretCardServiceServer).ReadSecretCard(ctx, req.(*ReadSecretCardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SecretCardService_UpdateSecretCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSecretCardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SecretCardServiceServer).UpdateSecretCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SecretCardService_UpdateSecretCard_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SecretCardServiceServer).UpdateSecretCard(ctx, req.(*UpdateSecretCardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SecretCardService_DeleteSecretCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSecretCardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SecretCardServiceServer).DeleteSecretCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SecretCardService_DeleteSecretCard_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SecretCardServiceServer).DeleteSecretCard(ctx, req.(*DeleteSecretCardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SecretCardService_ListSecretCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListSecretCardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SecretCardServiceServer).ListSecretCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SecretCardService_ListSecretCard_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SecretCardServiceServer).ListSecretCard(ctx, req.(*ListSecretCardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// SecretCardService_ServiceDesc is the grpc.ServiceDesc for SecretCardService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var SecretCardService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "v1.SecretCardService",
	HandlerType: (*SecretCardServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateSecretCard",
			Handler:    _SecretCardService_CreateSecretCard_Handler,
		},
		{
			MethodName: "ReadSecretCard",
			Handler:    _SecretCardService_ReadSecretCard_Handler,
		},
		{
			MethodName: "UpdateSecretCard",
			Handler:    _SecretCardService_UpdateSecretCard_Handler,
		},
		{
			MethodName: "DeleteSecretCard",
			Handler:    _SecretCardService_DeleteSecretCard_Handler,
		},
		{
			MethodName: "ListSecretCard",
			Handler:    _SecretCardService_ListSecretCard_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/secretcard.proto",
}

const (
	MetaSecretCardService_CreateMetaSecretCard_FullMethodName = "/v1.MetaSecretCardService/CreateMetaSecretCard"
	MetaSecretCardService_ReadMetaSecretCard_FullMethodName   = "/v1.MetaSecretCardService/ReadMetaSecretCard"
	MetaSecretCardService_UpdateMetaSecretCard_FullMethodName = "/v1.MetaSecretCardService/UpdateMetaSecretCard"
	MetaSecretCardService_DeleteMetaSecretCard_FullMethodName = "/v1.MetaSecretCardService/DeleteMetaSecretCard"
)

// MetaSecretCardServiceClient is the client API for MetaSecretCardService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type MetaSecretCardServiceClient interface {
	CreateMetaSecretCard(ctx context.Context, in *MetaSecretCard, opts ...grpc.CallOption) (*MetaSecretCard, error)
	ReadMetaSecretCard(ctx context.Context, in *ReadMetaSecretCardRequest, opts ...grpc.CallOption) (*MetaSecretCard, error)
	UpdateMetaSecretCard(ctx context.Context, in *MetaSecretCard, opts ...grpc.CallOption) (*MetaSecretCard, error)
	DeleteMetaSecretCard(ctx context.Context, in *DeleteMetaSecretCardRequest, opts ...grpc.CallOption) (*Empty, error)
}

type metaSecretCardServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMetaSecretCardServiceClient(cc grpc.ClientConnInterface) MetaSecretCardServiceClient {
	return &metaSecretCardServiceClient{cc}
}

func (c *metaSecretCardServiceClient) CreateMetaSecretCard(ctx context.Context, in *MetaSecretCard, opts ...grpc.CallOption) (*MetaSecretCard, error) {
	out := new(MetaSecretCard)
	err := c.cc.Invoke(ctx, MetaSecretCardService_CreateMetaSecretCard_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metaSecretCardServiceClient) ReadMetaSecretCard(ctx context.Context, in *ReadMetaSecretCardRequest, opts ...grpc.CallOption) (*MetaSecretCard, error) {
	out := new(MetaSecretCard)
	err := c.cc.Invoke(ctx, MetaSecretCardService_ReadMetaSecretCard_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metaSecretCardServiceClient) UpdateMetaSecretCard(ctx context.Context, in *MetaSecretCard, opts ...grpc.CallOption) (*MetaSecretCard, error) {
	out := new(MetaSecretCard)
	err := c.cc.Invoke(ctx, MetaSecretCardService_UpdateMetaSecretCard_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metaSecretCardServiceClient) DeleteMetaSecretCard(ctx context.Context, in *DeleteMetaSecretCardRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, MetaSecretCardService_DeleteMetaSecretCard_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MetaSecretCardServiceServer is the server API for MetaSecretCardService service.
// All implementations must embed UnimplementedMetaSecretCardServiceServer
// for forward compatibility
type MetaSecretCardServiceServer interface {
	CreateMetaSecretCard(context.Context, *MetaSecretCard) (*MetaSecretCard, error)
	ReadMetaSecretCard(context.Context, *ReadMetaSecretCardRequest) (*MetaSecretCard, error)
	UpdateMetaSecretCard(context.Context, *MetaSecretCard) (*MetaSecretCard, error)
	DeleteMetaSecretCard(context.Context, *DeleteMetaSecretCardRequest) (*Empty, error)
	mustEmbedUnimplementedMetaSecretCardServiceServer()
}

// UnimplementedMetaSecretCardServiceServer must be embedded to have forward compatible implementations.
type UnimplementedMetaSecretCardServiceServer struct {
}

func (UnimplementedMetaSecretCardServiceServer) CreateMetaSecretCard(context.Context, *MetaSecretCard) (*MetaSecretCard, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMetaSecretCard not implemented")
}
func (UnimplementedMetaSecretCardServiceServer) ReadMetaSecretCard(context.Context, *ReadMetaSecretCardRequest) (*MetaSecretCard, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadMetaSecretCard not implemented")
}
func (UnimplementedMetaSecretCardServiceServer) UpdateMetaSecretCard(context.Context, *MetaSecretCard) (*MetaSecretCard, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateMetaSecretCard not implemented")
}
func (UnimplementedMetaSecretCardServiceServer) DeleteMetaSecretCard(context.Context, *DeleteMetaSecretCardRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteMetaSecretCard not implemented")
}
func (UnimplementedMetaSecretCardServiceServer) mustEmbedUnimplementedMetaSecretCardServiceServer() {}

// UnsafeMetaSecretCardServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to MetaSecretCardServiceServer will
// result in compilation errors.
type UnsafeMetaSecretCardServiceServer interface {
	mustEmbedUnimplementedMetaSecretCardServiceServer()
}

func RegisterMetaSecretCardServiceServer(s grpc.ServiceRegistrar, srv MetaSecretCardServiceServer) {
	s.RegisterService(&MetaSecretCardService_ServiceDesc, srv)
}

func _MetaSecretCardService_CreateMetaSecretCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MetaSecretCard)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetaSecretCardServiceServer).CreateMetaSecretCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MetaSecretCardService_CreateMetaSecretCard_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetaSecretCardServiceServer).CreateMetaSecretCard(ctx, req.(*MetaSecretCard))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetaSecretCardService_ReadMetaSecretCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadMetaSecretCardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetaSecretCardServiceServer).ReadMetaSecretCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MetaSecretCardService_ReadMetaSecretCard_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetaSecretCardServiceServer).ReadMetaSecretCard(ctx, req.(*ReadMetaSecretCardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetaSecretCardService_UpdateMetaSecretCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MetaSecretCard)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetaSecretCardServiceServer).UpdateMetaSecretCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MetaSecretCardService_UpdateMetaSecretCard_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetaSecretCardServiceServer).UpdateMetaSecretCard(ctx, req.(*MetaSecretCard))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetaSecretCardService_DeleteMetaSecretCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteMetaSecretCardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetaSecretCardServiceServer).DeleteMetaSecretCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MetaSecretCardService_DeleteMetaSecretCard_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetaSecretCardServiceServer).DeleteMetaSecretCard(ctx, req.(*DeleteMetaSecretCardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// MetaSecretCardService_ServiceDesc is the grpc.ServiceDesc for MetaSecretCardService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var MetaSecretCardService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "v1.MetaSecretCardService",
	HandlerType: (*MetaSecretCardServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateMetaSecretCard",
			Handler:    _MetaSecretCardService_CreateMetaSecretCard_Handler,
		},
		{
			MethodName: "ReadMetaSecretCard",
			Handler:    _MetaSecretCardService_ReadMetaSecretCard_Handler,
		},
		{
			MethodName: "UpdateMetaSecretCard",
			Handler:    _MetaSecretCardService_UpdateMetaSecretCard_Handler,
		},
		{
			MethodName: "DeleteMetaSecretCard",
			Handler:    _MetaSecretCardService_DeleteMetaSecretCard_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/secretcard.proto",
}

const (
	FileSecretCardService_CreateFileSecretCard_FullMethodName = "/v1.FileSecretCardService/CreateFileSecretCard"
	FileSecretCardService_ReadFileSecretCard_FullMethodName   = "/v1.FileSecretCardService/ReadFileSecretCard"
	FileSecretCardService_UpdateFileSecretCard_FullMethodName = "/v1.FileSecretCardService/UpdateFileSecretCard"
	FileSecretCardService_DeleteFileSecretCard_FullMethodName = "/v1.FileSecretCardService/DeleteFileSecretCard"
	FileSecretCardService_ListFileSecretCard_FullMethodName   = "/v1.FileSecretCardService/ListFileSecretCard"
)

// FileSecretCardServiceClient is the client API for FileSecretCardService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type FileSecretCardServiceClient interface {
	CreateFileSecretCard(ctx context.Context, in *CreateFileSecretCardRequest, opts ...grpc.CallOption) (*FileSecretCard, error)
	ReadFileSecretCard(ctx context.Context, in *ReadFileSecretCardRequest, opts ...grpc.CallOption) (*FileSecretCard, error)
	UpdateFileSecretCard(ctx context.Context, in *UpdateFileSecretCardRequest, opts ...grpc.CallOption) (*FileSecretCard, error)
	DeleteFileSecretCard(ctx context.Context, in *DeleteFileSecretCardRequest, opts ...grpc.CallOption) (*Empty, error)
	ListFileSecretCard(ctx context.Context, in *ListFileSecretCardRequest, opts ...grpc.CallOption) (*ListFileSecretCardResponse, error)
}

type fileSecretCardServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFileSecretCardServiceClient(cc grpc.ClientConnInterface) FileSecretCardServiceClient {
	return &fileSecretCardServiceClient{cc}
}

func (c *fileSecretCardServiceClient) CreateFileSecretCard(ctx context.Context, in *CreateFileSecretCardRequest, opts ...grpc.CallOption) (*FileSecretCard, error) {
	out := new(FileSecretCard)
	err := c.cc.Invoke(ctx, FileSecretCardService_CreateFileSecretCard_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileSecretCardServiceClient) ReadFileSecretCard(ctx context.Context, in *ReadFileSecretCardRequest, opts ...grpc.CallOption) (*FileSecretCard, error) {
	out := new(FileSecretCard)
	err := c.cc.Invoke(ctx, FileSecretCardService_ReadFileSecretCard_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileSecretCardServiceClient) UpdateFileSecretCard(ctx context.Context, in *UpdateFileSecretCardRequest, opts ...grpc.CallOption) (*FileSecretCard, error) {
	out := new(FileSecretCard)
	err := c.cc.Invoke(ctx, FileSecretCardService_UpdateFileSecretCard_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileSecretCardServiceClient) DeleteFileSecretCard(ctx context.Context, in *DeleteFileSecretCardRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, FileSecretCardService_DeleteFileSecretCard_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileSecretCardServiceClient) ListFileSecretCard(ctx context.Context, in *ListFileSecretCardRequest, opts ...grpc.CallOption) (*ListFileSecretCardResponse, error) {
	out := new(ListFileSecretCardResponse)
	err := c.cc.Invoke(ctx, FileSecretCardService_ListFileSecretCard_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FileSecretCardServiceServer is the server API for FileSecretCardService service.
// All implementations must embed UnimplementedFileSecretCardServiceServer
// for forward compatibility
type FileSecretCardServiceServer interface {
	CreateFileSecretCard(context.Context, *CreateFileSecretCardRequest) (*FileSecretCard, error)
	ReadFileSecretCard(context.Context, *ReadFileSecretCardRequest) (*FileSecretCard, error)
	UpdateFileSecretCard(context.Context, *UpdateFileSecretCardRequest) (*FileSecretCard, error)
	DeleteFileSecretCard(context.Context, *DeleteFileSecretCardRequest) (*Empty, error)
	ListFileSecretCard(context.Context, *ListFileSecretCardRequest) (*ListFileSecretCardResponse, error)
	mustEmbedUnimplementedFileSecretCardServiceServer()
}

// UnimplementedFileSecretCardServiceServer must be embedded to have forward compatible implementations.
type UnimplementedFileSecretCardServiceServer struct {
}

func (UnimplementedFileSecretCardServiceServer) CreateFileSecretCard(context.Context, *CreateFileSecretCardRequest) (*FileSecretCard, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateFileSecretCard not implemented")
}
func (UnimplementedFileSecretCardServiceServer) ReadFileSecretCard(context.Context, *ReadFileSecretCardRequest) (*FileSecretCard, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadFileSecretCard not implemented")
}
func (UnimplementedFileSecretCardServiceServer) UpdateFileSecretCard(context.Context, *UpdateFileSecretCardRequest) (*FileSecretCard, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateFileSecretCard not implemented")
}
func (UnimplementedFileSecretCardServiceServer) DeleteFileSecretCard(context.Context, *DeleteFileSecretCardRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteFileSecretCard not implemented")
}
func (UnimplementedFileSecretCardServiceServer) ListFileSecretCard(context.Context, *ListFileSecretCardRequest) (*ListFileSecretCardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListFileSecretCard not implemented")
}
func (UnimplementedFileSecretCardServiceServer) mustEmbedUnimplementedFileSecretCardServiceServer() {}

// UnsafeFileSecretCardServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to FileSecretCardServiceServer will
// result in compilation errors.
type UnsafeFileSecretCardServiceServer interface {
	mustEmbedUnimplementedFileSecretCardServiceServer()
}

func RegisterFileSecretCardServiceServer(s grpc.ServiceRegistrar, srv FileSecretCardServiceServer) {
	s.RegisterService(&FileSecretCardService_ServiceDesc, srv)
}

func _FileSecretCardService_CreateFileSecretCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFileSecretCardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileSecretCardServiceServer).CreateFileSecretCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FileSecretCardService_CreateFileSecretCard_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileSecretCardServiceServer).CreateFileSecretCard(ctx, req.(*CreateFileSecretCardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileSecretCardService_ReadFileSecretCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadFileSecretCardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileSecretCardServiceServer).ReadFileSecretCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FileSecretCardService_ReadFileSecretCard_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileSecretCardServiceServer).ReadFileSecretCard(ctx, req.(*ReadFileSecretCardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileSecretCardService_UpdateFileSecretCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateFileSecretCardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileSecretCardServiceServer).UpdateFileSecretCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FileSecretCardService_UpdateFileSecretCard_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileSecretCardServiceServer).UpdateFileSecretCard(ctx, req.(*UpdateFileSecretCardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileSecretCardService_DeleteFileSecretCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteFileSecretCardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileSecretCardServiceServer).DeleteFileSecretCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FileSecretCardService_DeleteFileSecretCard_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileSecretCardServiceServer).DeleteFileSecretCard(ctx, req.(*DeleteFileSecretCardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileSecretCardService_ListFileSecretCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListFileSecretCardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileSecretCardServiceServer).ListFileSecretCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FileSecretCardService_ListFileSecretCard_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileSecretCardServiceServer).ListFileSecretCard(ctx, req.(*ListFileSecretCardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// FileSecretCardService_ServiceDesc is the grpc.ServiceDesc for FileSecretCardService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var FileSecretCardService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "v1.FileSecretCardService",
	HandlerType: (*FileSecretCardServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateFileSecretCard",
			Handler:    _FileSecretCardService_CreateFileSecretCard_Handler,
		},
		{
			MethodName: "ReadFileSecretCard",
			Handler:    _FileSecretCardService_ReadFileSecretCard_Handler,
		},
		{
			MethodName: "UpdateFileSecretCard",
			Handler:    _FileSecretCardService_UpdateFileSecretCard_Handler,
		},
		{
			MethodName: "DeleteFileSecretCard",
			Handler:    _FileSecretCardService_DeleteFileSecretCard_Handler,
		},
		{
			MethodName: "ListFileSecretCard",
			Handler:    _FileSecretCardService_ListFileSecretCard_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/secretcard.proto",
}
